<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=C699C5D9314C44D8ACFC30597FA70BC1/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=C699C5D9314C44D8ACFC30597FA70BC1/GroupingIndex/@EntryValue">3</s:Int64>
	
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=C699C5D9314C44D8ACFC30597FA70BC1/Name/@EntryValue">ShouldreturnZeroForANEmptyString</s:String>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=C699C5D9314C44D8ACFC30597FA70BC1/XmlSerializedElements/@EntryValue">&lt;Session&gt;&lt;Elements&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ConversionOfStringToIntegerTests" type="NUnitTestFixtureElement" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.DelimiterTests" type="NUnitTestFixtureElement" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests" type="NUnitTestFixtureElement" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ValidatorTests" type="NUnitTestFixtureElement" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString" ParentId="stringCalculatorTests.StringCalculatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.StringCalculatorTests" MethodName="ShouldCalculateSumOfValuesInaString" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfsingleValueInaString" ParentId="stringCalculatorTests.StringCalculatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.StringCalculatorTests" MethodName="ShouldCalculateSumOfsingleValueInaString" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ConversionOfStringToIntegerTests.ShouldConverStringToInteger" ParentId="stringCalculatorTests.ConversionOfStringToIntegerTests" type="NUnitTestElement" TypeName="stringCalculatorTests.ConversionOfStringToIntegerTests" MethodName="ShouldConverStringToInteger" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ValidatorTests.ShouldCreateAValidationObject" ParentId="stringCalculatorTests.ValidatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.ValidatorTests" MethodName="ShouldCreateAValidationObject" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ConversionOfStringToIntegerTests.ShouldCreateStringToIntegerConverterClass" ParentId="stringCalculatorTests.ConversionOfStringToIntegerTests" type="NUnitTestElement" TypeName="stringCalculatorTests.ConversionOfStringToIntegerTests" MethodName="ShouldCreateStringToIntegerConverterClass" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldNotAllowNumberBiggerThanThousand" ParentId="stringCalculatorTests.StringCalculatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.StringCalculatorTests" MethodName="ShouldNotAllowNumberBiggerThanThousand" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldNotAllowNumberBiggerThanThousandAndWithManyDelemiters" ParentId="stringCalculatorTests.StringCalculatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.StringCalculatorTests" MethodName="ShouldNotAllowNumberBiggerThanThousandAndWithManyDelemiters" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.DelimiterTests.ShouldReturnDelimetedarrayValue" ParentId="stringCalculatorTests.DelimiterTests" type="NUnitTestElement" TypeName="stringCalculatorTests.DelimiterTests" MethodName="ShouldReturnDelimetedarrayValue" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldReturnSumOfValuesInAStringStartingWithDelimeter" ParentId="stringCalculatorTests.StringCalculatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.StringCalculatorTests" MethodName="ShouldReturnSumOfValuesInAStringStartingWithDelimeter" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed" ParentId="stringCalculatorTests.StringCalculatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.StringCalculatorTests" MethodName="ShouldThrowAnExceptionwhenNegativeNumberIsPassed" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ConversionOfStringToIntegerTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed" ParentId="stringCalculatorTests.ConversionOfStringToIntegerTests" type="NUnitTestElement" TypeName="stringCalculatorTests.ConversionOfStringToIntegerTests" MethodName="ShouldThrowAnExceptionwhenNegativeNumberIsPassed" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ValidatorTests.ShouldValidateTheInputAndReturnZeroWhenItISGreaterThan1000" ParentId="stringCalculatorTests.ValidatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.ValidatorTests" MethodName="ShouldValidateTheInputAndReturnZeroWhenItISGreaterThan1000" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ValidatorTests.ShouldValidateTheNumberAndRetrunTHeSameWhenItIsLessThan1000_AndGreaterThan0" ParentId="stringCalculatorTests.ValidatorTests" type="NUnitTestElement" TypeName="stringCalculatorTests.ValidatorTests" MethodName="ShouldValidateTheNumberAndRetrunTHeSameWhenItIsLessThan1000_AndGreaterThan0" Project="56F4F35C-28C3-4823-8486-F74FC4C38D0D" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString(&amp;quot;1\n2,3&amp;quot;,6)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString(&amp;quot;1\n2,3;3&amp;quot;,9)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString(&amp;quot;2, 2&amp;quot;,4)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString(&amp;quot;2,2,2,2,3,3&amp;quot;,14)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfValuesInaString" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfsingleValueInaString(&amp;quot;&amp;quot;,0)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfsingleValueInaString" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfsingleValueInaString(&amp;quot;2&amp;quot;,2)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfsingleValueInaString" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfsingleValueInaString(&amp;quot;3,&amp;quot;,3)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldCalculateSumOfsingleValueInaString" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldNotAllowNumberBiggerThanThousand(&amp;quot;1001,2&amp;quot;)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldNotAllowNumberBiggerThanThousand" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldNotAllowNumberBiggerThanThousandAndWithManyDelemiters(&amp;quot;//[*][%]\n1*2%3&amp;quot;)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldNotAllowNumberBiggerThanThousandAndWithManyDelemiters" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldReturnSumOfValuesInAStringStartingWithDelimeter(&amp;quot;//;\n1;2&amp;quot;,3)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldReturnSumOfValuesInAStringStartingWithDelimeter" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed(&amp;quot;-1&amp;quot;)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.ConversionOfStringToIntegerTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed(&amp;quot;-1&amp;quot;)" ParentId="stringCalculatorTests.ConversionOfStringToIntegerTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed(&amp;quot;-1,-2&amp;quot;)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="stringCalculatorTests.StringCalculatorTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed(&amp;quot;2,2,2,2,3,-3&amp;quot;)" ParentId="stringCalculatorTests.StringCalculatorTests.ShouldThrowAnExceptionwhenNegativeNumberIsPassed" type="NUnitRowTestElement" /&gt;&lt;/Elements&gt;&lt;/Session&gt;</s:String></wpf:ResourceDictionary>